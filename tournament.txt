--------------------------------------------------------------------------------
Section 0 - Line up
--------------------------------------------------------------------------------
Player 0 (P0): E0, On even, betray
        Betray on even rounds.
Player 1 (P1): E1, Based on Score
        If their score greater, betray.
Player 2 (P2): E2, If Greater Than
        Betray if total times opponant betrayed is greater than times colluded.
Player 3 (P3): E3, Collude but retaliate
        Collude first round. Collude, except in a round after getting 
        a severe punishment.
--------------------------------------------------------------------------------
Section 1 - Player vs. Player
--------------------------------------------------------------------------------
Each column shows pts//round earned against each other player:
             P0     P1     P2     P3
vs. P0 :      0   -203   -200   -203
vs. P1 :   -198      0   -199      0
vs. P2 :   -200   -199      0   -199
vs. P3 :   -198      0   -199      0
TOTAL  :   -596   -402   -598   -402
--------------------------------------------------------------------------------
Section 2 - Leaderboard
--------------------------------------------------------------------------------
Average points per round:
Team name (P#):  Score      with strategy name
E1        (P1):       -101 points with Based on Score                          
E3        (P3):       -101 points with Collude but retaliate                   
E0        (P0):       -149 points with On even, betray                         
E2        (P2):       -150 points with If Greater Than                         
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
example0--------------------------------------------------------------------------------
##### Each team's file must define four tokens:# team_name: a string# strategy_name: a string# strategy_description: a string# move: A function that returns 'c' or 'b'####


team_name = 'E0'
strategy_name = 'On even, betray'
strategy_description = 'Betray on even rounds.' 

def move(my_history, their_history, my_score, their_score): 
  '''Make my move based on the history with this player. history: a string with one letter (c or b) per round that has been played with this opponent. their_history: a string of the same length as history, possibly empty. The first round between these two players is my_history[0] and their_history[0] The most recent round is my_history[-1] and their_history[-1] Returns 'c' or 'b' for collude or betray. ''' 
  
  # This player betrays on even numbered rounds (first round is round #0). 
  
  if len(my_history)%2 == 0: 
    return 'b' 
  else: 
    return 'c'
    --------------------------------------------------------------------------------
example1--------------------------------------------------------------------------------
##### Each team's file must define four tokens:# team_name: a string# strategy_name: a string# strategy_description: a string# move: A function that returns 'c' or 'b'####


team_name = 'E1'

strategy_name = 'Based on Score'

strategy_description = 'If their score greater, betray.'

def test(their_score, my_score): 
  if their_score > my_score: 
    return True 
  else: 
    return False

def move(my_history, their_history, my_score, their_score):
   '''Make my move based on the history with this player. history: a string with one letter (c or b) per round that has been played with this opponent. their_history: a string of the same length as history, possibly empty. The first round between these two players is my_history[0] and their_history[0] The most recent round is my_history[-1] and their_history[-1] Returns 'c' or 'b' for collude or betray.''' 
   
   if len(my_history) == 0: 
    return 'c'

   elif test(their_score, my_score) == True: 
     return 'b' 
  
   else: 
     return 'c'
--------------------------------------------------------------------------------
example2--------------------------------------------------------------------------------
##### Each team's file must define four tokens:# team_name: a string# strategy_name: a string# strategy_description: a string# move: A function that returns 'c' or 'b'####

team_name = 'E2'
strategy_name = 'If Greater Than'
strategy_description = 'Betray if total times opponant betrayed is greater than times colluded.'

def move(my_history, their_history, my_score, their_score): 
  '''Make my move based on the history with this player. history: a string with one letter (c or b) per round that has been played with this opponent. their_history: a string of the same length as history, possibly empty. The first round between these two players is my_history[0] and their_history[0] The most recent round is my_history[-1] and their_history[-1] Returns 'c' or 'b' for collude or betray.'''
  
  x = len(their_history) 
  total_b = 0 
  total_c = 0 
  for i in range(1, x): 
    if their_history[i] == "b": 
      total_b += 1 
    else: 
      total_c += 1 
      
  if len(my_history) == 0: 
    return 'c'
  if total_b >= total_c: 
    return 'b' 
  else: 
    return 'c'  
     

    --------------------------------------------------------------------------------
example3--------------------------------------------------------------------------------
####
# Each team's file must define four tokens:
#     team_name: a string
#     strategy_name: a string
#     strategy_description: a string
#     move: A function that returns 'c' or 'b'
####

team_name = 'E3'
strategy_name = 'Collude but retaliate'
strategy_description = '''\
Collude first round. Collude, except in a round after getting 
a severe punishment.'''
    
def move(my_history, their_history, my_score, their_score):
    '''Make my move based on the history with this player.
    
    history: a string with one letter (c or b) per round that has been played with this opponent.
    their_history: a string of the same length as history, possibly empty. 
    The first round between these two players is my_history[0] and their_history[0]
    The most recent round is my_history[-1] and their_history[-1]
    
    Returns 'c' or 'b' for collude or betray.
    '''
    if len(my_history)==0: # It's the first round; collude.
        return 'c'
    elif my_history[-1]=='c' and their_history[-1]=='b':
        return 'b' # Betray if they were severely punished last time,
    else:
        return 'c' # otherwise collude.--------------------------------------------------------------------------------
Section 3 - Game Data for Team E0
--------------------------------------------------------------------------------
-198 pt//round: E0(P0) "On even, betray"
-203 pt//ound: E1(P1) "Based on Score"
BcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBc
cBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcB

BcBcBcBcBcBcBcBcBcBcBcBcBcB
cBcBcBcBcBcBcBcBcBcBcBcBcBc

--------------------------------------------------------------------------------
-200 pt//round: E0(P0) "On even, betray"
-200 pt//ound: E2(P2) "If Greater Than"
BcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBc
cBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcB

BcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBc
cBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcB

--------------------------------------------------------------------------------
-198 pt//round: E0(P0) "On even, betray"
-203 pt//ound: E3(P3) "Collude but retaliate"
BcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBc
cBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcB

BcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcB
cBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBc

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Section 3 - Game Data for Team E1
--------------------------------------------------------------------------------
-203 pt//round: E1(P1) "Based on Score"
-198 pt//ound: E0(P0) "On even, betray"
cBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcB
BcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBc

cBcBcBcBcBcBcBcBcBcBcBcBcBc
BcBcBcBcBcBcBcBcBcBcBcBcBcB

--------------------------------------------------------------------------------
-199 pt//round: E1(P1) "Based on Score"
-199 pt//ound: E2(P2) "If Greater Than"
CcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBc
CBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcB

BcBcBcBcBcBcBcBcBcBcBcBcB
cBcBcBcBcBcBcBcBcBcBcBcBc

--------------------------------------------------------------------------------
0 pt//round: E1(P1) "Based on Score"
0 pt//ound: E3(P3) "Collude but retaliate"
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Section 3 - Game Data for Team E2
--------------------------------------------------------------------------------
-200 pt//round: E2(P2) "If Greater Than"
-200 pt//ound: E0(P0) "On even, betray"
cBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcB
BcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBc

cBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcB
BcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBc

--------------------------------------------------------------------------------
-199 pt//round: E2(P2) "If Greater Than"
-199 pt//ound: E1(P1) "Based on Score"
CBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcB
CcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBc

cBcBcBcBcBcBcBcBcBcBcBcBc
BcBcBcBcBcBcBcBcBcBcBcBcB

--------------------------------------------------------------------------------
-199 pt//round: E2(P2) "If Greater Than"
-199 pt//ound: E3(P3) "Collude but retaliate"
CBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcB
CcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBc

cBcBcBcBcBcBcBcBcBcBcBcBcBc
BcBcBcBcBcBcBcBcBcBcBcBcBcB

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Section 3 - Game Data for Team E3
--------------------------------------------------------------------------------
-203 pt//round: E3(P3) "Collude but retaliate"
-198 pt//ound: E0(P0) "On even, betray"
cBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcB
BcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBc

cBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBc
BcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcB

--------------------------------------------------------------------------------
0 pt//round: E3(P3) "Collude but retaliate"
0 pt//ound: E1(P1) "Based on Score"
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

--------------------------------------------------------------------------------
-199 pt//round: E3(P3) "Collude but retaliate"
-199 pt//ound: E2(P2) "If Greater Than"
CcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBc
CBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcB

BcBcBcBcBcBcBcBcBcBcBcBcBcB
cBcBcBcBcBcBcBcBcBcBcBcBcBc

--------------------------------------------------------------------------------
